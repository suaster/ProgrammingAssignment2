Ent## This pair of functions is to cache the inverse of a matrix, so as to reduce re-calculation and increase speed.


## This function creates a special "matrix" object that can cache its inverse.


makeCacheMatrix <- function(x = matrix()) {
	inverse <- NULL
	set <- function(y){
		x<<-y
		inverse<<-NULL
	}
	get <- function()x
	setinv <- function(myinv) inverse<<-myinv
	getinv <- function () inverse
	list(set=set,get=get,
	     setinv=setinv,
	     getinv=getinv)

}


## This function returns the value of inverse matrix if it is already in the cache,
## otherwise it calculates and return the inverse.

cacheSolve <- function(x,...){
    inverse0 <-x$getinv()
    if(!is.null(inverse0)){
        message("Getting Cached Inversed Matrix")
        return(inverse0)
    }
    data <- x$get()
    inverse0 <- solve(data)
    x$setinv(inverse0)
    inverse0
}
er file contents here
